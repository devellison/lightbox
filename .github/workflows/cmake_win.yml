name: CMake Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  OpenCV_DIR: C:/tools/opencv/build
  pybind11_DIR: c:\hostedtoolcache\windows\python\3.10.5\x64\lib\site-packages
    
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.6
      with:
        sdk-version: 20348

    - name: Install doxygen for Windows
      # Install opencv, doxygen
      run: choco install doxygen.install -y

    - name: Install opencv and graphviz
      run: choco install opencv graphviz

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10.5'
    - name: Install python deps
      run: |
        python -m pip install --upgrade pip
        pip install pybind11
        pip install opencv-python
        pip install numpy

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_SYSTEM_VERSION=10.0.20348.0

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
