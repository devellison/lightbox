name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        sudo apt install build-essential manpages-dev software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'     
        sudo apt update
        sudo apt-get install cmake libopencv-dev graphviz doxygen clang-12 pybind11-dev

    - name: Build fmtlib
      run: |
        git clone https://github.com/fmtlib/fmt.git externals/fmt
        cmake -S externals/fmt -B externals/fmt/build -DCMAKE_POSITION_INDEPENDENT_CODE=1
        cmake --build externals/fmt/build --config Release
        sudo cmake --build externals/fmt/build --config Release -t install

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10.5'

    - name: Install python deps
      run: |
        python -m pip install --upgrade pip
        pip install pybind11
        pip install opencv-python
        pip install numpy

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=clang-12 -DCMAKE_CXX_COMPILER=clang++-12

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
